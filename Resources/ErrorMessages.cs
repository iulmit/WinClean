// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

using System.Globalization;
using System.Resources;

namespace RaphaëlBardini.WinClean.Resources
{
    /// <summary>Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.</summary>
    /// <remarks>Replacing the code generated by the ResX engine, to support string formatting in resource properties.</remarks>
    internal class ErrorMessages
    {
        #region Private Fields

        private static readonly CultureInfo s_dataCulture = CultureInfo.CurrentCulture;
        private static readonly ResourceManager s_resourceManager = new(typeof(ErrorMessages).ToString(), typeof(ErrorMessages).Assembly);
        private static readonly CultureInfo s_uiCulture = CultureInfo.CurrentUICulture;

        #endregion Private Fields

        #region Internal Properties

        #region Formattable Strings

        /// <summary>Gets a localized string.</summary>
        /// <param name="logDirPath">The path of the uncreated directory.</param>
        /// <returns>The localized string corresponding to the unable to create log dir error.</returns>
        internal static string CantCreateLogDir(string logDirPath)
            => string.Format(s_dataCulture, s_resourceManager.GetString("CantCreateLogFile", s_uiCulture), logDirPath);

        /// <summary>Gets a localized string.</summary>
        /// <param name="logFilePath">The path of the undeleted log file.</param>
        /// <returns>The localized string corresponding to the unable to delete log file error.</returns>
        internal static string CantDeleteLogFile(string logFilePath)
            => string.Format(s_dataCulture, s_resourceManager.GetString("CantDeleteLogFile", s_uiCulture), logFilePath);

        /// <summary>Gets a localized string.</summary>
        /// <param name="secondsElapsed">The number of seconds the scripts have been running for.</param>
        /// <returns>The localized string corresponding to the hung script error.</returns>
        internal static string HungScript(int secondsElapsed)
            => string.Format(s_dataCulture, s_resourceManager.GetString("HungScript", s_uiCulture), secondsElapsed);

        /// <summary>Gets a localized string.</summary>
        /// <param name="name">The name that already exsits.</param>
        /// <returns>The localized string corresponding to the name already exists error.</returns>
        internal static string NameAlreadyExists(string name)
            => string.Format(s_dataCulture, s_resourceManager.GetString("NameAlreadyExists", s_uiCulture), name);

        /// <summary>Gets a localized string.</summary>
        /// <param name="wrongPath">The path of the executable file.</param>
        /// <param name="expectedDir">The expected path.</param>
        /// <returns>The localized string corresponding to the wrong executable path error</returns>
        internal static string WrongExecutablePath(string wrongPath, string expectedDir)
            => string.Format(s_dataCulture, s_resourceManager.GetString("WrongExecutablePath", s_uiCulture), wrongPath, expectedDir);

        #endregion Formattable Strings

        /// <summary>Recherche une chaîne localisée semblable à L'application est déjà en cours d'exécution..</summary>
        internal static string AppAlreadyRunning => s_resourceManager.GetString("AppAlreadyRunning", s_uiCulture);

        /// <summary>Recherche une chaîne localisée semblable à Cliquez sur OK pour quitter l'application..</summary>
        internal static string ClickOKToExit => s_resourceManager.GetString("ClickOKToExit", s_uiCulture);

        /// <summary>Recherche une chaîne localisée semblable à La description est vide ou composée uniquement d'espaces blancs..</summary>
        internal static string EmptyDescription => s_resourceManager.GetString("EmptyDescription", s_uiCulture);

        /// <summary>Recherche une chaîne localisée semblable à Le nom est vide ou composé uniquement d'espaces blancs..</summary>
        internal static string EmptyName => s_resourceManager.GetString("EmptyName", s_uiCulture);

        /// <summary>Recherche une chaîne localisée semblable à Le fichier existe déjà. Remplacer le fichier ?.</summary>
        internal static string FileReplacePrompt => s_resourceManager.GetString("FileReplacePrompt", s_uiCulture);

        /// <summary>Recherche une chaîne localisée semblable à Aucun groupe sélectionné..</summary>
        internal static string NoGroupSelected => s_resourceManager.GetString("NoGroupSelected", s_uiCulture);

        /// <summary>Recherche une chaîne localisée semblable à Continuer l'exécution ?.</summary>
        internal static string PromptContinueApp => s_resourceManager.GetString("PromptContinueApp", s_uiCulture);

        /// <summary>
        /// Recherche une chaîne localisée semblable à SetProcessDPIAware a retourné 0. Redémarrer l'application peut résoudre le problème. Sinon, contactez le support. Si vous continuez,
        /// l'application ne sera pas compatibles avec les écrans au DPI non-standard..
        /// </summary>
        internal static string SetProcessDpiAwareReturnedFalse => s_resourceManager.GetString("SetProcessDpiAwareReturnedFalse", s_uiCulture);

        #endregion Internal Properties
    }
}
