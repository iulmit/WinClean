<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinClean</name>
    </assembly>
    <members>
        <member name="M:RaphaëlBardini.WinClean.DebugHelpers.m``1(``0)">
            <summary>Shortcut to <see cref="M:System.Windows.Forms.MessageBox.Show(System.String)" /></summary>
            <remarks>Debug only</remarks>
        </member>
        <member name="M:RaphaëlBardini.WinClean.DebugHelpers.mEach``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Displays a collection in a message box.</summary>
            <typeparam name="T">The collection item type.</typeparam>
            <param name="enumerable">The collection to display.</param>
            <remarks>Debug only.</remarks>
        </member>
        <member name="M:RaphaëlBardini.WinClean.DebugHelpers.mr``1(``0)">
            <summary>Displays data in a message box, waits for it's dismiss, and returns that data.</summary>
            <typeparam name="T">The type of the data passed.</typeparam>
            <param name="o">The data passed.</param>
            <returns><paramref name="o" />.</returns>
            <remarks>Debug only.</remarks>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.BadFileExtensionException">
            <summary>The exception is thrown when a file has the wrong extension.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.BadFileExtensionException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Logic.BadFileExtensionException" /> class.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.BadFileExtensionException.#ctor(System.String)">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.BadFileExtensionException.#ctor" />
            <param name="extension">The wrong extension.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.BadFileExtensionException.#ctor(System.String,System.Exception)">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.BadFileExtensionException.#ctor(System.String)" />
            <inheritdoc path="/param" />
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.BadFileExtensionException.Extension">
            <summary>The wrong file extension.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ErrorDialog">
            <summary>A standardised error message, implementing Microsoft's error messages design reccomendations.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.CantCreateScriptFileInScriptsDir(System.Exception,System.Action,System.Action)">
            <summary>Can't create script file error.</summary>
            <param name="e">The exception that caused the error.</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryClose(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.CantCreateLogDir(System.Exception,System.Action,System.Action)">
            <summary>Can't create log directory error.</summary>
            <param name="e">The exception that caused the error.</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryClose(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.CantCreateScriptsDir(System.Exception,System.Action,System.Action)">
            <summary>Can't create scripts directory error.</summary>
            <param name="e">The exception that caused the error.</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryClose(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.CantDeleteLogFile(System.Exception,System.Action,System.Action)">
            <summary>Can't create log file error.</summary>
            <param name="e">The exception that caused the error.</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryIgnore(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.ConfirmAbortOperation(System.Action,System.Action)">
            <summary>Asks the users for confirmation on exiting the application and potentially loosing data.</summary>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.YesNo(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.ConfirmScriptOverwrite(System.IO.FileInfo,System.Action,System.Action)">
            <summary>Prompts the user for confirmation on overwriting a script that already exists in the scripts directory.</summary>
            <param name="overwriter">The path the external script file that may overwrite a script file in the scripts directory..</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.YesNo(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.HungScript(System.String,System.Action,System.Action,System.Action)">
            <summary>Hung script error.</summary>
            <param name="filename">The hung script's filename.</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RestartKillIgnore(System.Action,System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.ScriptInacessible(System.String,System.Exception,System.Action,System.Action,System.Action)">
            <summary>Script not found error.</summary>
            <param name="filename">The inacessible script's filename.</param>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.DeleteRetryIgnore(System.Action,System.Action,System.Action)" path="/param" />
            <param name="e">The exception that caused the error.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.SingleInstanceOnly(System.Action,System.Action)">
            <summary>Single instance only error.</summary>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryClose(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.WrongStartupPath(System.Action,System.Action)">
            <summary>Wrong startup path error.</summary>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryClose(System.Action,System.Action)" path="/param" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.DeleteRetryIgnore(System.Action,System.Action,System.Action)">
            <param name="retry">Invoked when the Retry button of the dialog is clicked.</param>
            <param name="ignore">Invoked when the Ignore button of the dialog is clicked.</param>
            <param name="delete">Invoked when the Delete Script button of the dialog is clicked.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RestartKillIgnore(System.Action,System.Action,System.Action)">
            <param name="restart">Invoked when the Restart Script of the dialog button is clicked.</param>
            <param name="kill">Invoked when the Kill Script button of the dialog is clicked.</param>
            <param name="ignore">Invoked when the Ignore button of the dialog is clicked.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryClose(System.Action,System.Action)">
            <param name="retry">Invoked when the Retry button of the dialog is clicked.</param>
            <param name="close">Invoked when the Close button of the dialog is clicked.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.RetryIgnore(System.Action,System.Action)">
            <param name="retry">Invoked when the Retry button of the dialog is clicked.</param>
            <param name="ignore">Invoked when the Ignore button of the dialog is clicked.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ErrorDialog.YesNo(System.Action,System.Action)">
            <param name="yes">Invoked when the Yes button of the dialog is clicked.</param>
            <param name="no">Invoked when the No button of the dialog is clicked.</param>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ExtensionGroup">
            <summary>A group of related extensions</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ExtensionGroup.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Logic.ExtensionGroup" /> structure.</summary>
            <param name="extensions">The extensions in the group.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ExtensionGroup.#ctor(System.String[])">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ExtensionGroup.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ExtensionGroup._extensions">
            <summary>File extensions included in the group.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.ExtensionGroup.Count">
            <inheritdoc />
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.ExtensionGroup.Name">
            <summary>Name of the group.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ExtensionGroup.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.Helpers">
            <summary>Provides a set of extension methods that fulfill a relatively generic role.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.Helpers.MaxFilename">
            <summary>
            MAX_PATH (<c>260</c>) minus the null terminator (<c>'\0'</c>), the drive letter, it's colon and slash and a trailing slash.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.MakeFilter(System.Windows.Forms.OpenFileDialog,System.Collections.Generic.IEnumerable{RaphaëlBardini.WinClean.Logic.ExtensionGroup})">
            <summary>Creates a file extension filter for an <see cref="T:System.Windows.Forms.OpenFileDialog" /> control.</summary>
            <param name="ofd">The <see cref="T:System.Windows.Forms.OpenFileDialog" /> control to make a filter for.</param>
            <param name="exts">The extension to put into the filter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="ofd" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.MakeFilter(System.Windows.Forms.OpenFileDialog,RaphaëlBardini.WinClean.Logic.ExtensionGroup[])">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.Helpers.MakeFilter(System.Windows.Forms.OpenFileDialog,System.Collections.Generic.IEnumerable{RaphaëlBardini.WinClean.Logic.ExtensionGroup})" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.ToFilename(System.String,System.String)">
            <summary>
            Creates a valid Windows filename from a string.
            </summary>
            <param name="filenameCandidate">The filename candidate.</param>
            <param name="replaceInvalidCharsWith">What to replace invalid filename chars in <paramref name="filenameCandidate" /> with.</param>
            <returns><paramref name="filenameCandidate" />, modified to be a valid Windows filename if it wasn't already.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="filenameCandidate" /> or <paramref name="replaceInvalidCharsWith" /> are <see langword="null" />, or <paramref name="replaceInvalidCharsWith" /> contains invalid filename chars.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.IsFilename(System.String)">
            <summary>
            Checks if a string is a valid Windows filename.
            </summary>
            <param name="filenameCandidate">The filename candidate.</param>
            <returns><see langword="true" /> if <paramref name="filenameCandidate" /> can be a filename, otherwise; <see langword="false" />. This method returns <see langword="false" /> if <paramref name="filenameCandidate" /> is <see langword="null" />.</returns>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.ThrowIfUnacessible(System.IO.FileInfo,System.IO.FileAccess)">
            <summary>Throws the appropriate exception if the filesystem element is not accessible.</summary>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="info" /> was not found.</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="info" /> is readonly or a directory.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
            <paramref name="info" /> is invalid, such as being on an unmapped drive.
            </exception>
            <exception cref="T:System.IO.IOException"><paramref name="info" /> is already open.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.ThrowIfUnacessible(System.IO.DirectoryInfo)">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.Helpers.ThrowIfUnacessible(System.IO.FileInfo,System.IO.FileAccess)" path="/summary" />
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The path encapsulated in the System.IO.DirectoryInfo object is invalid (for example, it is on an unmapped drive).
            </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Helpers.FileSystem(System.Exception)">
            <summary>
            Checks if an exception is of a type that .NET Core's filesystem methods can throw.
            </summary>
            <returns>
            <para><see langword="true" /> if <paramref name="e" /> is of any of the following types :</para>
            <br><see cref="T:System.IO.IOException" /> (including all derived exceptions)</br>
            <br><see cref="T:System.UnauthorizedAccessException" /></br>
            <br><see cref="T:System.NotSupportedException" /></br>
            <br><see cref="T:System.Security.SecurityException" /></br>
            <para>Otherwise; <see langword="false" />.</para>
            </returns>
            <remarks>Note that unrelated methods may throw any of these exceptions.</remarks>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ImpactEffect">
            <summary>Effect of running a script.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.Ergonomics">
            <summary>System praticality.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.MemoryUsage">
            <summary>Idle system memory usage.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.NetworkUsage">
            <summary>Idle system network usage.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.ResponseTime">
            <summary>System rapidity of executing commands.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.ShutdownTime">
            <summary>System shutdown time.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.DataCollection">
            <summary>System privacy invasion and spying.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.StartupTime">
            <summary>System startup time.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.StorageCapacity">
            <summary>Free storage space.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.StorageSpeed">
            <summary>Storage read-write speed.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactEffect.Visuals">
            <summary>System visuals.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ImpactEffectExtensions">
            <summary>
            Provides extension methods for the <see cref="T:RaphaëlBardini.WinClean.Logic.ImpactEffect" /> enum;
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ImpactEffectExtensions.GetLocalizedString(RaphaëlBardini.WinClean.Logic.ImpactEffect)">
            <summary>Gets the localized string corresponding the <paramref name="effect" />'s value.</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="effect" /> is not a defined <see cref="T:RaphaëlBardini.WinClean.Logic.ImpactEffect" /> constant.
            </exception>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ImpactLevel">
            <summary>Represents the level of an <see cref="T:RaphaëlBardini.WinClean.Logic.ImpactEffect" />.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactLevel.Positive">
            <summary>Improvement.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactLevel.Negative">
            <summary>Worsening.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ImpactLevel.Mixed">
            <summary>Variable, uncertain.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.Impact">
            <summary>A system-wide effect of running a script.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.#ctor(RaphaëlBardini.WinClean.Logic.ImpactLevel,RaphaëlBardini.WinClean.Logic.ImpactEffect)">
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="lvl" /> is not a valid <see cref="T:RaphaëlBardini.WinClean.Logic.ImpactLevel" /> value.
            </exception>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.Impact.Effect">
            <summary>The actual effect of running a script.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.Impact.Level">
            <summary>The level of the effect.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.Equals(RaphaëlBardini.WinClean.Logic.Impact)">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.ToString">
            <inheritdoc cref="M:System.Object.ToString" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.op_Equality(RaphaëlBardini.WinClean.Logic.Impact,RaphaëlBardini.WinClean.Logic.Impact)">
            <summary>Indicates <paramref name="left" /> is equal to right <paramref name="right" />.</summary>
            <returns><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Impact.op_Inequality(RaphaëlBardini.WinClean.Logic.Impact,RaphaëlBardini.WinClean.Logic.Impact)">
            <summary>Indicates wether the object is different from another object of the same type.</summary>
            <returns><see langword="true" /> if <paramref name="left" /> is different from <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.IScript">
            <summary>Represents an executable script associated to a script host program.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.IScript.Advised">
            <summary>If running this script is advised in general purpose.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.IScript.Description">
            <summary>Details on how this scripts work and what the effects of executing it would be.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.IScript.Impacts">
            <summary>System impacts of running this script.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.IScript.Name">
            <summary>A brief infinitive sentence that describes the functionnality of this script.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.IScript.Execute">
            <summary>Executes the script in a new process.</summary>
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Operational.IScriptHost.Execute(System.IO.FileInfo)" path="/exception" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.IScript.Save">
            <summary>Saves this script to the scripts dir.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.Program">
            <summary>Holds the <see cref="M:RaphaëlBardini.WinClean.Logic.Program.Main" /> method and application-wide data.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.Program.InstallDir">
            <summary>Application install directory.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Program.ConfirmAndExecuteScripts(System.Collections.Generic.IEnumerable{RaphaëlBardini.WinClean.Logic.IScript})">
            <summary>Runs the specified scripts.</summary>
            <remarks>If there is more than 1 script to run, shows a GUI.</remarks>
            <param name="scripts"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scripts" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Program.Exit">
            <summary>Disposes of ressources and exits the program.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Program.ShowAboutBox">
            <summary>Displays the <see cref="T:RaphaëlBardini.WinClean.Presentation.AboutBox" /> form.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Program.ShowSettings">
            <summary>Displays the <see cref="T:RaphaëlBardini.WinClean.Presentation.Settings" /> form.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.Script">
            <summary>A script that can be executed from a script host program.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Script.#ctor(System.String,System.Windows.Forms.ListView)">
            <summary>
            Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Logic.Script" /> class from the specified file in the scripts dir.
            </summary>
            <param name="scriptFilename">The filename of the script file in the scripts dir.</param>
            <param name="displayInto">The list view in which the script will be displayed.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scriptFilename" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="scriptFilename" /> is not a valid filename.</exception>
            <exception cref="M:RaphaëlBardini.WinClean.Logic.Helpers.FileSystem(System.Exception)"><paramref name="scriptFilename" /> cannot be accessed.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Script.#ctor(System.String,System.String,RaphaëlBardini.WinClean.Logic.ScriptAdvised,System.Collections.Generic.ICollection{RaphaëlBardini.WinClean.Logic.Impact},System.Windows.Forms.ListViewGroup,System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Logic.Script" /> class.
            </summary>
            <param name="name">A brief infinitive sentence that describes the functionnality of this script.</param>
            <param name="description">Details on how this scripts work and what the effects of executing it would be.</param>
            <param name="advised">If running this script is advised in general purpose.</param>
            <param name="impacts">System impacts of running this script.</param>
            <param name="group">The list view group the script will be part of. This parameter can be <see langword="null" />.</param>
            <param name="source">The source script file.</param>
            <exception cref="T:System.ArgumentNullException">One or more parameters are <see langword="null" />.</exception>
            <exception cref="M:RaphaëlBardini.WinClean.Logic.Helpers.FileSystem(System.Exception)"><paramref name="source" /> cannot be accessed.</exception>
            <exception cref="T:RaphaëlBardini.WinClean.Logic.BadFileExtensionException"><paramref name="source" />'s extensions is not supported.</exception>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.Script.Advised">
            <inheritdoc />
            <remarks>Set accessor changes the background color.</remarks>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.Script.Description">
            <inheritdoc />
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.Script.Impacts">
            <inheritdoc />
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.Script.Name">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Script.Execute">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Script.Save">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.Script.GetColor(RaphaëlBardini.WinClean.Logic.ScriptAdvised)">
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="scriptAdvised" /> is not a defined <see cref="T:RaphaëlBardini.WinClean.Logic.ScriptAdvised" /> constant.
            </exception>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ScriptAdvised">
            <summary>If a script is advised for general purpose</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ScriptAdvised.Unspecified">
            <summary>
            Not specified. It should be.
            </summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ScriptAdvised.Yes">
            <summary>
            The script is advised for any user. It has almost no side effects and won't hinder features the said user might want
            to use. It can be selected automatically.
            </summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ScriptAdvised.Limited">
            <summary>
            The script only advised for users who want advanced optimisation. It may hinder useful system features. It should be
            selected individually by the user.
            </summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Logic.ScriptAdvised.No">
            <summary>
            The script must be selected only by users who know what they are doing. It will almost certainly hinder useful
            system features. It should be selected by the user, only if specifically needed.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ScriptExecutorGUI">
            <summary>Represents a <see cref="T:RaphaëlBardini.WinClean.Logic.Script" /> collection that can be executed.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ScriptExecutorGUI.#ctor(System.Collections.Generic.IEnumerable{RaphaëlBardini.WinClean.Logic.IScript})">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Logic.ScriptExecutorGUI" /> class.</summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="scripts" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ScriptExecutorGUI.Dispose">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ScriptExecutorGUI.ExecuteAll">
            <summary>Executes all the scripts and displays a dialog tracking the progress.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ScriptsDir">
            <summary>
            Provides methods representing the available operations with the applicaton scripts dir.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Logic.ScriptsDir.Info">
            <summary>
            The <see cref="T:System.IO.DirectoryInfo" /> representing the scripts directory.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ScriptsDir.LoadAllScripts(System.Windows.Forms.ListView)">
            <summary>
            Loads all the scripts present in the scripts directory.
            </summary>
            <param name="loadInto">The listView to load the scripts into.</param>
            <returns>The scripts previously saved into the scripts dir.</returns>
            <remarks>Lazy <see langword="yield return" /> iterator.</remarks>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Logic.ToEnumerabling">
            <summary>Provides extension methods for converting collections to <see cref="T:System.Collections.Generic.IEnumerable`1" /> without casting.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ToEnumerabling.ToEnumerable(System.Windows.Forms.ListView.CheckedListViewItemCollection)">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ToEnumerabling.ToEnumerable(System.Windows.Forms.ToolStripItemCollection)" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ToEnumerabling.ToEnumerable(System.Windows.Forms.ListView.ListViewItemCollection)">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Logic.ToEnumerabling.ToEnumerable(System.Windows.Forms.ToolStripItemCollection)" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Logic.ToEnumerabling.ToEnumerable(System.Windows.Forms.ToolStripItemCollection)">
            <summary>Converts a collection object to an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
            <param name="c">The collection to convert.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the elements of <paramref name="c" />.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="c" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:RaphaëlBardini.WinClean.LogLevel">
            <summary>Specifies a minimum log level.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogLevel.Verbose">
            <summary>All entries are logged.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogLevel.Info">
            <summary>Informational entries minimum.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogLevel.Warning">
            <summary>Warning-level entries minimum.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogLevel.Error">
            <summary>Error-level entries minimum.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogLevel.Critical">
            <summary>Unrecoverable errors. The application can't continue.</summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.LogManager">
            <summary>Provides CSV logging.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.LogManager.MinLogLevel">
            <summary>
            Minimal log level for an entry.
            </summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogManager.DateTimeFilenameFormat">
            <summary>Format string used by <see cref="M:System.DateTime.ToString(System.String)" /> used for NTFS filenames.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogManager.LogDelimiter">
            <summary>CSV Log entry column delimiter.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogManager.s_currentLogFile">
            <summary>Unique log file that will be used for this session.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.LogManager.s_logIndex">
            <summary>Count of log entries wrote.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.ClearLogsFolder">
            <summary>
            Empties the log folder, except for the current log file.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.Log(System.String,System.String,RaphaëlBardini.WinClean.LogLevel,System.String,System.Int32,System.String)">
            <summary>Logs a string.</summary>
            <param name="str">The string to log.</param>
            <param name="happening">What's happening right now.</param>
            <param name="lvl">The level of the log entry.</param>
            <param name="caller"><see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> - Don't specify</param>
            <param name="callLine"><see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" /> - Don't specify</param>
            <param name="callFile"><see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" /> - Don't specify</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.Log(System.Exception,RaphaëlBardini.WinClean.LogLevel,System.String,System.Int32,System.String)">
            <summary>
            Logs an exception and it's details.
            </summary>
            <param name="e">The exception to log.</param>
            <param name="lvl">The level of the entry.</param>
            <param name="caller"><see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" /> - Don't specify</param>
            <param name="callLine"><see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" /> - Don't specify</param>
            <param name="callFile"><see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" /> - Don't specify</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.CanLogFileBeDeleted(System.IO.FileInfo)">
            <summary>Checks that a log file is valid for deletion. Doesn't throw.</summary>
            <param name="logFile">The filename or path of the log file.</param>
            <returns>
            <see langword="true" /> if <paramref name="logFile" /> is a valid path, it's filename is a valid log filename,
            and it's not the current session's log file. If one or more of these conditions are not met, <see langword="false" />.
            </returns>
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.CreateLogDir">
            <summary>Creates the appropriate log folder if missing.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.LogManager.DeleteLogFile(System.IO.FileInfo)">
            <summary>Deletes a log file.</summary>
            <param name="path">The full path of the log file to delete.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="path" /> is in an invalid format.</exception>
            <exception cref="T:System.IO.PathTooLongException">
            The specified path, file name, or both exceed the system-defined maximum length.
            </exception>
            <remarks>Handles some filesystem exceptions.</remarks>
        </member>
        <member name="T:RaphaëlBardini.WinClean.LogManager.LogEntry">
            <remarks>The fields are in the order we want the CSV header to be in. Topmost = leftmost</remarks>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Operational.IScriptHost">
            <summary>Represents a program that accepts a file in it's command-line arguments.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.IScriptHost.DisplayName">
            <summary>User friendly name for the script host.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.IScriptHost.SupportedExtensions">
            <summary>Extensions of the scripts the script host program can run.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.IScriptHost.Execute(System.IO.FileInfo)">
            <summary>Executes the script host with the specified script file.</summary>
            <param name="script">The path of the script file to run.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="script" />'s <see langword="null" />.</exception>
            <exception cref="T:RaphaëlBardini.WinClean.Logic.BadFileExtensionException"><paramref name="script" />'s extension is not supported.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.IScriptHost.Execute(System.String)">
            <summary>
            Executes the specified code that must me in the appropriate scripting langage.
            </summary>
            <param name="code">The code to execute.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.NativeMethods.RemoveTitleBarIcon(System.IntPtr)">
            <summary>Removes the system menu icon from a window.</summary>
            <param name="window">The Win32 window to remove the icon from.</param>
            <returns>The old window icon</returns>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.NativeMethods.RemoveTitleBarIcon(System.Windows.Forms.IWin32Window)">
            <inheritdoc cref="M:RaphaëlBardini.WinClean.Operational.NativeMethods.RemoveTitleBarIcon(System.IntPtr)" />
        </member>
        <member name="T:RaphaëlBardini.WinClean.Operational.ScriptHost">
            <inheritdoc cref="T:RaphaëlBardini.WinClean.Operational.IScriptHost" />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.#ctor(System.IO.FileInfo,System.String,System.Text.Encoding,RaphaëlBardini.WinClean.Logic.ExtensionGroup)">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Operational.ScriptHost" /> class.</summary>
            <param name="executable">The filename of the script host program's executable.</param>
            <param name="arguments">
            A formattable string representing the appropriate arguments to run the script host, hidden, with a single script. It
            must have exactly 1 argument, the path of the script file to execute.
            </param>
            <param name="encoding">The default encoding of the script host.</param>
            <param name="supportedExtensions">The extensions the script host supports.</param>
            <exception cref="T:System.ArgumentNullException">One ore more parameters are <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="arguments" /> does not contain exactly 1 formattable argument..</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.FromFileExtension(System.String)">
            <summary>Creates a new <see cref="T:RaphaëlBardini.WinClean.Operational.ScriptHost" /> object from a script file extension.</summary>
            <param name="ext">The file extension to create a <see cref="T:RaphaëlBardini.WinClean.Operational.ScriptHost" /> from.</param>
            <exception cref="T:RaphaëlBardini.WinClean.Logic.BadFileExtensionException"><paramref name="ext" /> is not supported by any known <see cref="T:RaphaëlBardini.WinClean.Operational.ScriptHost" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="ext" /> is <see langword="null" />.</exception>
            <returns>A known <see cref="T:RaphaëlBardini.WinClean.Operational.ScriptHost" />.</returns>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.ScriptHost.Cmd">
            <summary>The Windows Command Line interpreter (cmd.exe) script host.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.ScriptHost.PowerShell">
            <summary>The Windows PowerShell script host.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.ScriptHost.Regedit">
            <summary>The Windows Registry Editor script host.</summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.ScriptHost.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:RaphaëlBardini.WinClean.Operational.ScriptHost.SupportedExtensions">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.Execute(System.IO.FileInfo)">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.Execute(System.String)">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.ToString">
            <inheritdoc />
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.ToUnicode(System.IO.StreamReader)">
            <summary>Reads everything in a stream and returns the converted Uunicode text.</summary>
            <param name="stream">A text stream in a non-unicode encoding.</param>
            <returns>The text of <paramref name="stream" /> in Unicode.</returns>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Operational.ScriptHost.IncompleteArguments">
            <summary>Formattable executable arguments with a single file path argument.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.IncompleteArguments.#ctor(System.String)">
            <param name="args">Formattable string with 1 argument, the path of the script file.</param>
            <exception cref="T:System.ArgumentException"><paramref name="args" /> does not contain exactly one argument.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="args" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.IncompleteArguments.Complete(System.IO.FileInfo)">
            <summary>Completes the arguments with the specified script file.</summary>
            <param name="script">The file to complete the arguments with.</param>
            <returns>The completed arguments</returns>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ScriptHost.IncompleteArguments.ToString">
            <inheritdoc />
        </member>
        <member name="T:RaphaëlBardini.WinClean.Operational.ShellProperty">
            <summary>Provides static methods for manipulation file and folder shell properties.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Operational.ShellProperty.GetFileDescription(System.IO.FileInfo)">
            <summary>Gets the shell attribute labeled "File Description" of a file.</summary>
            <param name="path">The file to get the file description from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
            <returns>The file description, or <see cref="F:System.String.Empty" /> if there is none.</returns>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Presentation.AboutBox">
            <summary>Displays the traditional about box with application-related metadata</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.AboutBox.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Presentation.AboutBox" /> classe.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Presentation.AboutBox.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.AboutBox.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.AboutBox.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Presentation.FormConfirm">
            <summary>A confirmation modal dialog box ensuring that the user knows what he's doing when about to execute scripts.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.FormConfirm.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Presentation.FormConfirm" /> class.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Presentation.FormConfirm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.FormConfirm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.FormConfirm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Presentation.MainForm">
            <summary>
            This is the application's main form. It regroups several features, including the main commit buttons, script selection,
            and provides UI acess to other forms.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.MainForm.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Presentation.MainForm" /> class.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.MainForm.ListViewScripts_Resize(System.Object,System.EventArgs)">
            <summary>
            Resizes <see cref="F:RaphaëlBardini.WinClean.Presentation.MainForm.listViewScripts" />'s main and only column, <see cref="F:RaphaëlBardini.WinClean.Presentation.MainForm.scriptHeaderName" />, to match <see
            cref="F:RaphaëlBardini.WinClean.Presentation.MainForm.listViewScripts" />'s new size.
            </summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Presentation.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Presentation.Settings">
            <summary>Form to acess and modify application settings.</summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.Settings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RaphaëlBardini.WinClean.Presentation.Settings" /> class.</summary>
        </member>
        <member name="F:RaphaëlBardini.WinClean.Presentation.Settings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.Settings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Presentation.Settings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Resources.ErrorStrings">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ErrorStrings.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ErrorStrings.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ErrorStrings.Error">
            <summary>
              Recherche une chaîne localisée semblable à Erreur.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ErrorStrings.Info">
            <summary>
              Recherche une chaîne localisée semblable à Information.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ErrorStrings.Warning">
            <summary>
              Recherche une chaîne localisée semblable à Avertissement.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Resources.FormattableStrings">
            <summary>Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.</summary>
            <remarks>Replacing the code generated by the ResX engine, to support string formatting in resource properties.</remarks>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Resources.FormattableStrings.About(System.String)">
            <summary>Gets a formattable localized string.</summary>
            <returns>The localized string corresponding to "About programName".</returns>
        </member>
        <member name="M:RaphaëlBardini.WinClean.Resources.FormattableStrings.Version(System.String)">
            <summary>Gets a formattable localized string.</summary>
            <returns>The localized string corresponding to "Version versionNumber".</returns>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Resources.Icons">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.Error">
            <summary>
              Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.Main">
            <summary>
              Recherche une ressource localisée de type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.MainIcon">
            <summary>
              Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.Windows10">
            <summary>
              Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.Windows11">
            <summary>
              Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Icons.Windows8">
            <summary>
              Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Resources.ImpactEffect">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.DataCollection">
            <summary>
              Recherche une chaîne localisée semblable à Données de diagnostic.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.Ergonomics">
            <summary>
              Recherche une chaîne localisée semblable à Ergonomie.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.MemoryUsage">
            <summary>
              Recherche une chaîne localisée semblable à Utilisation mémoire.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.NetworkUsage">
            <summary>
              Recherche une chaîne localisée semblable à Utilisation réseau.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.ResponseTime">
            <summary>
              Recherche une chaîne localisée semblable à Temps de réponse système.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.ShutdownTime">
            <summary>
              Recherche une chaîne localisée semblable à Temps d&apos;arrêt système.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.StartupTime">
            <summary>
              Recherche une chaîne localisée semblable à Temps de démarrage système.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.StorageCapacity">
            <summary>
              Recherche une chaîne localisée semblable à Capacité disque.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.StorageSpeed">
            <summary>
              Recherche une chaîne localisée semblable à Vitesse disque.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.ImpactEffect.Visuals">
            <summary>
              Recherche une chaîne localisée semblable à Apparence.
            </summary>
        </member>
        <member name="T:RaphaëlBardini.WinClean.Resources.Presets">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.AllDesc">
            <summary>
              Recherche une chaîne localisée semblable à Tous les scripts.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.AllName">
            <summary>
              Recherche une chaîne localisée semblable à Tout.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.DebloatDesc">
            <summary>
              Recherche une chaîne localisée semblable à Scripts correspondant à une opération initiale d&apos;amélioration des performances..
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.DebloatName">
            <summary>
              Recherche une chaîne localisée semblable à Debloat.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.MaintenanceDesc">
            <summary>
              Recherche une chaîne localisée semblable à Scripts correspondant à une opération de maintenance pouvant être effectuée régulièrement..
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.MaintenanceName">
            <summary>
              Recherche une chaîne localisée semblable à Maintenance.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.NoneDesc">
            <summary>
              Recherche une chaîne localisée semblable à Aucun script.
            </summary>
        </member>
        <member name="P:RaphaëlBardini.WinClean.Resources.Presets.NoneName">
            <summary>
              Recherche une chaîne localisée semblable à Rien.
            </summary>
        </member>
    </members>
</doc>
